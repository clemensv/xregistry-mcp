{
  "ancestor": "1",
  "createdat": "2025-04-25T12:42:58.355713903Z",
  "deployment": {
    "sandbox": {
      "args": [],
      "command": "python main.py",
      "env": [
        {
          "default": "127.0.0.1",
          "description": "Redis IP or hostname",
          "name": "REDIS_HOST",
          "required": false
        },
        {
          "default": "6379",
          "description": "Redis port",
          "name": "REDIS_PORT",
          "required": false
        },
        {
          "default": "default",
          "description": "Default database username",
          "name": "REDIS_USERNAME",
          "required": false
        },
        {
          "default": "",
          "description": "Default database password",
          "name": "REDIS_PWD",
          "required": false
        },
        {
          "default": "False",
          "description": "Enables or disables SSL/TLS",
          "name": "REDIS_SSL",
          "required": false
        }
      ],
      "package": "mcp-redis",
      "runtime": "python"
    }
  },
  "description": "The Redis MCP Server is a natural language interface designed for agentic applications to efficiently manage and search data in Redis. It integrates seamlessly with MCP (Model Content Protocol) clients, enabling AI-driven workflows to interact with structured and unstructured data in Redis.",
  "endpoints": {
    "stdio": {
      "deployment": "sandbox"
    }
  },
  "epoch": 1,
  "isdefault": true,
  "mcpversion": "1.0",
  "modifiedat": "2025-04-25T12:42:58.355713903Z",
  "name": "Redis MCP Server",
  "repository": {
    "name": "redis/mcp-redis",
    "url": "https://github.com/redis/mcp-redis"
  },
  "self": "https://raw.githubusercontent.com/clemensv/xregistry-mcp/refs/heads/master/raw/mcpproviders/redis/servers/mcp-redis/versions/1",
  "serverid": "mcp-redis",
  "serverversion": "unknown",
  "tools": [
    {
      "description": "Tools to set, get strings with expiration. Useful for storing simple configuration values, session data, or caching responses.",
      "inputschema": {
        "type": "object"
      },
      "name": "string"
    },
    {
      "description": "Tools to store field-value pairs within a single key. The hash can store vector embeddings. Useful for representing objects with multiple attributes, user profiles, or product information where fields can be accessed individually.",
      "inputschema": {
        "type": "object"
      },
      "name": "hash"
    },
    {
      "description": "Tools with common operations to append and pop items. Useful for queues, message brokers, or maintaining a list of most recent actions.",
      "inputschema": {
        "type": "object"
      },
      "name": "list"
    },
    {
      "description": "Tools to add, remove and list set members. Useful for tracking unique values like user IDs or tags, and for performing set operations like intersection.",
      "inputschema": {
        "type": "object"
      },
      "name": "set"
    },
    {
      "description": "Tools to manage data for e.g. leaderboards, priority queues, or time-based analytics with score-based ordering.",
      "inputschema": {
        "type": "object"
      },
      "name": "sorted set"
    },
    {
      "description": "Functionality to publish messages to channels and subscribe to receive them. Useful for real-time notifications, chat applications, or distributing updates to multiple clients.",
      "inputschema": {
        "type": "object"
      },
      "name": "pub/sub"
    },
    {
      "description": "Tools to add, read, and delete from data streams. Useful for event sourcing, activity feeds, or sensor data logging with consumer groups support.",
      "inputschema": {
        "type": "object"
      },
      "name": "streams"
    },
    {
      "description": "Tools to store, retrieve, and manipulate JSON documents in Redis. Useful for complex nested data structures, document databases, or configuration management with path-based access.",
      "inputschema": {
        "type": "object"
      },
      "name": "JSON"
    },
    {
      "description": "Tools to manage vector indexes and perform vector search",
      "inputschema": {
        "type": "object"
      },
      "name": "query engine"
    },
    {
      "description": "Tool to retrieve information about the database",
      "inputschema": {
        "type": "object"
      },
      "name": "server management"
    }
  ],
  "versionid": "1",
  "xid": "/mcpproviders/redis/servers/mcp-redis/versions/1"
}