{
  "ancestor": "1",
  "createdat": "2025-05-09T16:41:23.011627935Z",
  "description": "A Model Context Protocol (MCP) server that connects any LLM or Agentic AI to real-time, rights-cleared, proprietary data from trusted sources. Dappier enables your AI to become an expert in anything by providing access to specialized models, including Real-Time Web Search, News, Sports, Financial Stock Market Data, Crypto Data, and exclusive content from premium publishers.",
  "epoch": 1,
  "isdefault": true,
  "modifiedat": "2025-05-09T16:41:23.011627935Z",
  "name": "io.github.DappierAI/dappier-mcp",
  "prompts": [],
  "registries": [
    {
      "command_arguments": {
        "environment_variables": [
          {
            "description": "API key for accessing Dappier services",
            "name": "DAPPIER_API_KEY",
            "required": true
          }
        ],
        "positional_arguments": [],
        "sub_commands": []
      },
      "license": "",
      "name": "npm",
      "package_name": "dappier-mcp"
    }
  ],
  "remotes": [],
  "repo_ref": "DappierAI/dappier-mcp",
  "resources": [],
  "self": "https://mcpxreg.org/mcpproviders/DappierAI/servers/dappier-mcp/versions/1",
  "serverid": "dappier-mcp",
  "tools": [
    {
      "description": "Retrieves direct answers to real-time queries using AI-powered search. This includes web search results, financial information, news, weather, stock market updates, and more.",
      "inputschema": {
        "properties": {
          "ai_model_id": {
            "description": "The AI model ID to use for the query. Defaults to am_01j06ytn18ejftedz6dyhz2b15 (Real-Time Data).",
            "type": "string"
          },
          "query": {
            "description": "The user-provided input string for retrieving real-time data.",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "name": "dappier_real_time_search"
    },
    {
      "description": "Provides AI-powered content recommendations based on structured data models. Returns a list of articles with titles, summaries, images, and source URLs.",
      "inputschema": {
        "properties": {
          "data_model_id": {
            "description": "The data model ID to use for recommendations. Defaults to dm_01j0pb465keqmatq9k83dthx34 (Sports News).",
            "type": "string"
          },
          "num_articles_ref": {
            "description": "The minimum number of articles to return from the specified reference domain (ref). Defaults to 0.",
            "type": "integer"
          },
          "query": {
            "description": "The user-provided input string for AI recommendations.",
            "type": "string"
          },
          "ref": {
            "description": "The site domain where AI recommendations should be displayed. Defaults to None.",
            "type": "string"
          },
          "search_algorithm": {
            "description": "The search algorithm to use for retrieving articles. Options: most_recent, semantic, most_recent_semantic, trending. Defaults to most_recent.",
            "type": "string"
          },
          "similarity_top_k": {
            "description": "The number of top documents to retrieve based on similarity. Defaults to 9.",
            "type": "integer"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "name": "dappier_ai_recommendations"
    }
  ],
  "version_detail": {
    "version": "0.0.0"
  },
  "versionid": "1",
  "xid": "/mcpproviders/DappierAI/servers/dappier-mcp/versions/1"
}