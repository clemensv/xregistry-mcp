{
  "repo_ref": "topoteretes/cognee",
  "name": "io.github.topoteretes/cognee",
  "description": "Build dynamic Agent memory using scalable, modular ECL (Extract, Cognify, Load) pipelines.",
  "version_detail": {
    "version": "0.1.0"
  },
  "remotes": [],
  "registries": [
    {
      "name": "python",
      "package_name": "cognee",
      "license": "",
      "command_arguments": {
        "sub_commands": [],
        "positional_arguments": [],
        "environment_variables": [
          {
            "name": "LLM_API_KEY",
            "description": "API key for LLM provider",
            "required": true
          }
        ],
        "named_arguments": null
      }
    }
  ],
  "prompts": [],
  "tools": [
    {
      "name": "cognify",
      "description": "Cognifies text into knowledge graph",
      "inputschema": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The text to cognify"
          },
          "graph_model_file": {
            "type": "string",
            "description": "The path to the graph model file (Optional)"
          },
          "graph_model_name": {
            "type": "string",
            "description": "The name of the graph model (Optional)"
          }
        },
        "required": [
          "text"
        ]
      }
    },
    {
      "name": "codify",
      "description": "Transforms codebase into knowledge graph",
      "inputschema": {
        "type": "object",
        "properties": {
          "repo_path": {
            "type": "string"
          }
        },
        "required": [
          "repo_path"
        ]
      }
    },
    {
      "name": "search",
      "description": "Searches for information in knowledge graph",
      "inputschema": {
        "type": "object",
        "properties": {
          "search_query": {
            "type": "string",
            "description": "The query to search for"
          },
          "search_type": {
            "type": "string",
            "description": "The type of search to perform (e.g., INSIGHTS, CODE)"
          }
        },
        "required": [
          "search_query"
        ]
      }
    },
    {
      "name": "prune",
      "description": "Prunes knowledge graph",
      "inputschema": {
        "type": "object",
        "properties": {}
      }
    }
  ],
  "resources": []
}