{
  "repo_ref": "scorzeth/anki-mcp-server",
  "name": "io.github.scorzeth/anki-mcp-server",
  "description": "An MCP server implementation that connects to a locally running Anki, providing card review and creation.",
  "version_detail": {
    "version": "1.0.0"
  },
  "remotes": [],
  "registries": [
    {
      "name": "npm",
      "package_name": "anki-mcp-server",
      "license": "",
      "command_arguments": {
        "sub_commands": [],
        "positional_arguments": [],
        "environment_variables": [],
        "named_arguments": null
      }
    }
  ],
  "prompts": [],
  "tools": [
    {
      "name": "update_cards",
      "description": "After the user answers cards you've quizzed them on, use this tool to mark them answered and update their ease",
      "inputschema": {
        "type": "object",
        "properties": {
          "answers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cardId": {
                  "type": "number",
                  "description": "Id of the card to answer"
                },
                "ease": {
                  "type": "number",
                  "description": "Ease of the card between 1 (Again) and 4 (Easy)"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "add_card",
      "description": "Create a new flashcard in Anki for the user. Must use HTML formatting only. IMPORTANT FORMATTING RULES:\n1. Must use HTML tags for ALL formatting - NO markdown\n2. Use <br> for ALL line breaks\n3. For code blocks, use <pre> with inline CSS styling\n4. Example formatting:\n   - Line breaks: <br>\n   - Code: <pre style=\"background-color: transparent; padding: 10px; border-radius: 5px;\">\n   - Lists: <ol> and <li> tags\n   - Bold: <strong>\n   - Italic: <em>",
      "inputschema": {
        "type": "object",
        "properties": {
          "front": {
            "type": "string",
            "description": "The front of the card. Must use HTML formatting only."
          },
          "back": {
            "type": "string",
            "description": "The back of the card. Must use HTML formatting only."
          }
        },
        "required": [
          "front",
          "back"
        ]
      }
    },
    {
      "name": "get_due_cards",
      "description": "Returns a given number (num) of cards due for review.",
      "inputschema": {
        "type": "object",
        "properties": {
          "num": {
            "type": "number",
            "description": "Number of due cards to get"
          }
        },
        "required": [
          "num"
        ]
      }
    },
    {
      "name": "get_new_cards",
      "description": "Returns a given number (num) of new and unseen cards.",
      "inputschema": {
        "type": "object",
        "properties": {
          "num": {
            "type": "number",
            "description": "Number of new cards to get"
          }
        },
        "required": [
          "num"
        ]
      }
    }
  ],
  "resources": [
    {
      "uritemplate": "anki://search/deckcurrent",
      "name": "Current Deck",
      "description": "Returns all cards from current deck",
      "mimetype": "application/json"
    },
    {
      "uritemplate": "anki://search/isdue",
      "name": "Due cards",
      "description": "Returns cards in review and learning waiting to be studied",
      "mimetype": "application/json"
    },
    {
      "uritemplate": "anki://search/isnew",
      "name": "New cards",
      "description": "Returns all unseen cards",
      "mimetype": "application/json"
    }
  ]
}